{"version":3,"sources":["hooks/useContract.ts","components/Button/index.ts","components/Spinner/styles.ts","components/Spinner/index.tsx","components/WaveBox/styles.ts","components/WaveBox/index.tsx","components/WavesList/styles.ts","components/WavesList/index.tsx","components/Form/styles.ts","components/Form/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CONTRACT_ADDRESS","Button","styled","button","spin","keyframes","Loader","div","inner","innest","Spinner","vibrate","Container","isWinner","css","Field","WaveBox","wave","waver","message","timestamp","Date","Number","toDateString","WavesList","waves","map","Input","input","Form","onWave","useState","setMessage","value","onChange","event","target","console","log","onClick","App","currentAccount","setCurrentAccount","isMining","setIsMining","setWaves","checkIfWalletIsConnected","a","window","ethereum","request","method","accounts","length","account","connectWallet","alert","useEffect","provider","ethers","providers","Web3Provider","signer","getSigner","waveportalContract","Contract","waveportal","abi","gasLimit","waveTxn","hash","wait","getWaves","useCallback","useContract","text","Header","Emoji","Bio","h1","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"44iBAKMA,EAAmB,6CCHZC,EAASC,IAAOC,OAAV,8OCAbC,EAAOC,YAAH,wRAgBGC,EAASJ,IAAOK,IAAV,iSAIR,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAAwBD,EAAQ,OAASC,EAAS,OAAS,WAC1D,gBAAGD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACRD,EAAQ,OAASC,EAAS,OAAS,UACxBL,G,OCtBFM,EAA6B,kBACxC,cAACJ,EAAD,UACE,cAACA,EAAD,CAAQE,OAAK,EAAb,SACE,cAACF,EAAD,CAAQG,QAAM,SCJdE,EAAUN,YAAH,wKAcAO,EAAYV,IAAOK,IAAV,uSAMA,qBAAGM,SACV,uBAAyB,8BACpC,qBAAGA,UAEHC,YADQ,qFAEOH,MAaNI,EAAQb,IAAOK,IAAV,0BChCLS,EAA2C,SAAC,GAAD,QACtDC,KAAQC,EAD8C,EAC9CA,MAAOC,EADuC,EACvCA,QAASC,EAD8B,EAC9BA,UAAWP,EADmB,EACnBA,SADmB,OAGtD,eAACD,EAAD,CAAWC,SAAUA,EAArB,UACE,eAACE,EAAD,uBAAiBG,KACjB,eAACH,EAAD,oBAAc,IAAIM,KAAKC,OAAOF,IAAYG,kBAC1C,eAACR,EAAD,uBAAiBI,KACjB,eAACJ,EAAD,iBAAWF,EAAW,YAAc,sBCb3BD,EAAYV,IAAOK,IAAV,sFCOTiB,EAA+C,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxD,cAAC,EAAD,UACGA,EAAMC,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAA8BA,KAAMA,GAAtBA,EAAKG,iBCVdR,EAAYV,IAAOK,IAAV,0IAQToB,EAAQzB,IAAO0B,MAAV,gECFLC,EAAqC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAClCC,mBAAS,IADyB,mBACzDZ,EADyD,KAChDa,EADgD,KAShE,OACE,eAAC,EAAD,WACE,cAACL,EAAD,CAAOM,MAAOd,EAASe,SARL,SAACC,GAAgB,IAC7BF,EAAUE,EAAMC,OAAhBH,MACRI,QAAQC,IAAI,CAAEL,UACdD,EAAWC,MAMT,cAAChC,EAAD,CAAQsC,QAAS,kBAAMT,EAAOX,IAA9B,iDCdS,SAASqB,IAAO,IAAD,EVCH,WAAO,IAAD,EACaT,mBAAS,IADtB,mBACxBU,EADwB,KACRC,EADQ,OAECX,oBAAS,GAFV,mBAExBY,EAFwB,KAEdC,EAFc,OAGLb,mBAAiB,IAHZ,mBAGxBN,EAHwB,KAGjBoB,EAHiB,KAKzBC,EAAwB,uCAAG,kCAAAC,EAAA,oEAERC,OAAbC,EAFqB,EAErBA,SAFqB,uBAK3BZ,QAAQC,IAAI,gCALe,0BAQ3BD,QAAQC,IAAI,8BAA+BW,GARhB,wBAWNA,EAASC,QAAQ,CAAEC,OAAQ,iBAXrB,QAaL,KAFlBC,EAXuB,QAahBC,QACLC,EAAUF,EAAS,GACzBf,QAAQC,IAAI,+BAAgCgB,GAC5CZ,EAAkBY,IAElBjB,QAAQC,IAAI,+BAlBe,kDAqB7BD,QAAQC,IAAR,MArB6B,0DAAH,qDAyBxBiB,EAAa,uCAAG,gCAAAR,EAAA,oEAEGC,OAAbC,EAFU,EAEVA,SAFU,uBAKhBO,MAAM,iBALU,0CASKP,EAASC,QAAQ,CACtCC,OAAQ,wBAVQ,OASZC,EATY,OAalBf,QAAQC,IAAI,YAAac,EAAS,IAClCV,EAAkBU,EAAS,IAdT,kDAgBlBf,QAAQC,IAAR,MAhBkB,0DAAH,qDAoBnBmB,qBAAU,WACRX,MACC,IAEH,IAAM7B,EAAI,uCAAG,WAAOE,GAAP,2BAAA4B,EAAA,oEAEYC,SAAbC,EAFC,EAEDA,UAFC,wBAKDS,EAAW,IAAIC,IAAOC,UAAUC,aAAaZ,GAC7Ca,EAASJ,EAASK,YAClBC,EAAqB,IAAIL,IAAOM,SACpCjE,EACAkE,EAAWC,IACXL,GAVK,SAaeE,EAAmB/C,KAAKE,EAAS,CACrDiD,SAAU,MAdL,cAaDC,EAbC,OAgBPzB,GAAY,GACZP,QAAQC,IAAI,YAAa+B,EAAQC,MAjB1B,UAmBDD,EAAQE,OAnBP,eAoBP3B,GAAY,GACZP,QAAQC,IAAI,YAAa+B,EAAQC,MArB1B,UAuBWN,EAAmBQ,WAvB9B,QAuBH/C,EAvBG,OAwBPY,QAAQC,IAAR,6BAAkCb,EAAM4B,OAAxC,oBAEAR,EAASpB,GA1BF,wBA4BPY,QAAQC,IAAI,kCA5BL,0DA+BTD,QAAQC,IAAR,MA/BS,0DAAH,sDAmCJkC,EAAWC,sBAAW,sBAAC,sCAAA1B,EAAA,oEAEJC,SAAbC,EAFiB,EAEjBA,UAFiB,wBAKjBS,EAAW,IAAIC,IAAOC,UAAUC,aAAaZ,GAC7Ca,EAASJ,EAASK,YAClBC,EAAqB,IAAIL,IAAOM,SACpCjE,EACAkE,EAAWC,IACXL,GAVqB,SAaLE,EAAmBQ,WAbd,OAanB/C,EAbmB,OAcvBY,QAAQC,IAAR,6BAAkCb,EAAM4B,OAAxC,oBAEAR,EAASpB,GAhBc,wBAkBvBY,QAAQC,IAAI,kCAlBW,0DAqBzBD,QAAQC,IAAR,MArByB,0DAuB1B,IAEH,MAAO,CACLG,iBACAC,oBACAzB,OACAsC,gBACAZ,WACAlB,QACA+C,YUxHAE,GADMjC,EADoB,EACpBA,eAAgBxB,EADI,EACJA,KAAMsC,EADF,EACEA,cAAeZ,EADjB,EACiBA,SAAUlB,EAD3B,EAC2BA,MAOjDkD,EAAOhC,EACT,mCACA,2DAEJ,OACE,eAAC,EAAD,WACE,cAACiC,EAAD,yBACA,cAACC,EAAD,2BAEA,cAACC,EAAD,UAAMH,IAEJlC,EAEEE,EACF,cAAC,EAAD,IACElB,EAAM4B,OACR,cAAC,EAAD,CAAW5B,MAAOA,IAElB,cAAC,EAAD,CAAMK,OAAQb,IANd,cAAChB,EAAD,CAAQsC,QAASgB,EAAjB,+BAYR,IAAM3C,EAAYV,IAAOK,IAAV,kRAcTqE,EAAS1E,IAAO6E,GAAV,0BAENF,EAAQ3E,IAAO8E,EAAV,kEAKLF,EAAM5E,IAAOK,IAAV,mDC7CM0E,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd141ed9.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport waveportal from \"src/utils/WavePortal.json\";\r\nimport { Wave } from \"src/types\";\r\n\r\nconst CONTRACT_ADDRESS = \"0x29900649cCFc09920e62d28f496a33e1476DA9aE\";\r\n\r\nexport const useContract = () => {\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [isMining, setIsMining] = useState(false);\r\n  const [waves, setWaves] = useState<Wave[]>([]);\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        console.log(\"Make sure you have metamask!\");\r\n        return;\r\n      } else {\r\n        console.log(\"We have the ethereum object\", ethereum);\r\n      }\r\n\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n      if (accounts.length !== 0) {\r\n        const account = accounts[0];\r\n        console.log(\"Found an authorized account:\", account);\r\n        setCurrentAccount(account);\r\n      } else {\r\n        console.log(\"No authorized account found\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  const wave = async (message: string) => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const waveportalContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          waveportal.abi,\r\n          signer\r\n        );\r\n\r\n        const waveTxn = await waveportalContract.wave(message, {\r\n          gasLimit: 300000,\r\n        });\r\n        setIsMining(true);\r\n        console.log(\"Mining...\", waveTxn.hash);\r\n\r\n        await waveTxn.wait();\r\n        setIsMining(false);\r\n        console.log(\"Mined -- \", waveTxn.hash);\r\n\r\n        let waves = await waveportalContract.getWaves();\r\n        console.log(`We have a total of ${waves.length} waves till now`);\r\n\r\n        setWaves(waves);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getWaves = useCallback(async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const waveportalContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          waveportal.abi,\r\n          signer\r\n        );\r\n\r\n        let waves = await waveportalContract.getWaves();\r\n        console.log(`We have a total of ${waves.length} waves till now`);\r\n\r\n        setWaves(waves);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    currentAccount,\r\n    setCurrentAccount,\r\n    wave,\r\n    connectWallet,\r\n    isMining,\r\n    waves,\r\n    getWaves,\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 5px;\r\n  background-color: #63b5cf;\r\n  padding: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n\r\n  &:hover {\r\n    background-color: #3ca2c3;\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst spin = keyframes`\r\n        0% {\r\n          transform: rotate(0deg);\r\n        }\r\n  \r\n        50% {\r\n          transform: rotate(180deg);\r\n          opacity: 0.6;\r\n        }\r\n  \r\n        100% {\r\n          transform: rotate(360deg);\r\n          opacity: 1;\r\n        }\r\n      `;\r\n\r\nexport const Loader = styled.div<{ inner?: boolean; innest?: boolean }>`\r\n  border: 16px solid lightBlue;\r\n  border-top: 16px solid rgba(255, 219, 220);\r\n  border-radius: 50%;\r\n  width: ${({ inner, innest }) => (inner ? \"67px\" : innest ? \"15px\" : \"120px\")};\r\n  height: ${({ inner, innest }) =>\r\n    inner ? \"67px\" : innest ? \"15px\" : \"120px\"};\r\n  animation: ${spin} 2s linear infinite;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Loader } from \"./styles\";\r\n\r\nexport const Spinner: FunctionComponent = () => (\r\n  <Loader>\r\n    <Loader inner>\r\n      <Loader innest />\r\n    </Loader>\r\n  </Loader>\r\n);\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst vibrate = keyframes`\r\n        0% {\r\n          transform: translate(0);\r\n        }\r\n  \r\n        100% {\r\n          transform: translate(-5px, 0);\r\n        }\r\n      `;\r\n\r\ninterface ContainerProps {\r\n  isWinner: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid white;\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  background-color: ${({ isWinner }) =>\r\n    isWinner ? \"rgba(124,0,248,0.12)\" : \"rgba(255, 255, 255, 0.1)\"};\r\n  ${({ isWinner }) =>\r\n    isWinner &&\r\n    css`\r\n      animation: ${vibrate} 0.3s linear infinite alternate;\r\n    `}\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Field = styled.div``;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Wave } from \"src/types\";\r\nimport { Container, Field } from \"./styles\";\r\n\r\ninterface WaveBoxProps {\r\n  wave: Wave;\r\n}\r\n\r\nexport const WaveBox: FunctionComponent<WaveBoxProps> = ({\r\n  wave: { waver, message, timestamp, isWinner },\r\n}) => (\r\n  <Container isWinner={isWinner}>\r\n    <Field>Address: {waver}</Field>\r\n    <Field>Time: {new Date(Number(timestamp)).toDateString()}</Field>\r\n    <Field>Message: {message}</Field>\r\n    <Field>Is {isWinner ? \"a winner!\" : \"not a winner\"}</Field>\r\n  </Container>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { Wave } from \"src/types\";\r\nimport { WaveBox } from \"..\";\r\nimport { Container } from \"./styles\";\r\n\r\ninterface WavesListProps {\r\n  waves: Wave[];\r\n}\r\n\r\nexport const WavesList: FunctionComponent<WavesListProps> = ({ waves }) => \r\n    <Container>\r\n      {waves.map((wave) => (\r\n        <WaveBox key={wave.timestamp} wave={wave} />\r\n      ))}\r\n    </Container>\r\n  \r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1em;\r\n`;\r\n\r\nexport const Input = styled.input`\r\npadding: 1em;\r\nborder-radius: 5px;\r\n`;\r\n","import { FunctionComponent, useState } from \"react\";\r\nimport { Button } from \"src/components\";\r\nimport { Container, Input } from \"./styles\";\r\n\r\ninterface FormProps {\r\n  onWave: (message: string) => void;\r\n}\r\n\r\nexport const Form: FunctionComponent<FormProps> = ({ onWave }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const changeMessage = (event: any) => {\r\n    const { value } = event.target;\r\n    console.log({ value });\r\n    setMessage(value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Input value={message} onChange={changeMessage} />\r\n      <Button onClick={() => onWave(message)}>\r\n        Tell me something while waving!\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n","// import { useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { Button, Spinner, WavesList, Form } from \"src/components\";\n\nexport default function App() {\n  const { currentAccount, wave, connectWallet, isMining, waves } =\n    useContract();\n\n  // useEffect(() => {\n  //   getWaves()\n  // }, [getWaves]);\n\n  const text = isMining\n    ? \"⛏️ Mining ⛏️\"\n    : \"I am Pablo, connect your Ethereum wallet and wave at me!\";\n\n  return (\n    <Container>\n      <Header>Let's wave</Header>\n      <Emoji>😎</Emoji>\n\n      <Bio>{text}</Bio>\n\n      {!currentAccount ? (\n        <Button onClick={connectWallet}>Connect Wallet</Button>\n      ) : isMining ? (\n        <Spinner />\n      ) : waves.length ? (\n        <WavesList waves={waves} />\n      ) : (\n        <Form onWave={wave} />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1em;\n  background-color: #363537;\n  min-height: 100vh;\n  padding: 1em;\n  box-sizing: border-box;\n  text-align: center;\n  color: white;\n`;\n\nconst Header = styled.h1``;\n\nconst Emoji = styled.p`\n  font-size: 40px;\n  margin: 0.5em;\n`;\n\nconst Bio = styled.div`\n  margin-bottom: 2em;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}